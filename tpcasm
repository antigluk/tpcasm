#!/usr/bin/python

import argparse
import fileinput
from functools import partial, reduce
from itertools import chain
import re

import micro
import firmware
from tools import *

VERSION = (0, 1)


def print_header():
    print("tpcasm %d.%d" % VERSION)
    print('-------------------')


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('file', metavar="FILE", type=str,
                        help='source file name')
    parser.add_argument('output', metavar="OUTPUT", type=str,
                        help='output file name')
    parser.add_argument('-q', '--quiet', action="store_true",
                        help="quiet")
    parser.add_argument('--target', type=str, choices=["micro", "firmware"],
                        default="micro",
                        help="micro - microasm; firmware - device program")

    args = parser.parse_args()

    preprocessed = strip_empty(
        remove_comments(
            chain(fileinput.input(args.file), ['end'])
        ))

    if args.target == "micro":
        converted = micro.process(preprocessed)

    if args.target == "firmware":
        converted = firmware.process(preprocessed)

    with open(args.output, "w") as output:
        print('\n'.join(converted), file=output)
        # print(gen_end(), file=output)

    if not args.quiet:
        print_header()

if __name__ == '__main__':
    main()
